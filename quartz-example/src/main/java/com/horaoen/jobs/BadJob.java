package com.horaoen.jobs;

import cn.hutool.core.text.StrFormatter;
import lombok.extern.slf4j.Slf4j;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

import java.time.Instant;
import java.util.Date;

@Slf4j
@SuppressWarnings("all")
public class BadJob implements Job {
    private int calculation;

    @Override
    public void execute(JobExecutionContext context) throws JobExecutionException {
        log.info(StrFormatter.format("---{} execution at {}",
                context.getJobDetail().getKey(), Date.from(Instant.now())));
        // a contrived example of an exception that
        // will be generated by this job due to a 
        // divide by zero error
        try {
            int zero = 0;
            calculation = 4815 / zero;
        } catch (Exception e) {
            log.info("--- Error in job!");
            JobExecutionException zeroE =
                    new JobExecutionException(e);
            // Quartz will automatically unschedule
            // all triggers associated with this job
            // so that it does not run again
            zeroE.setUnscheduleAllTriggers(true);
            throw zeroE;
        }
    }
}
